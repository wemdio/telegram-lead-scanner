// –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π fetch –≤ Node.js 18+

async function fixGlobalSettings() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å globalSettings...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const statusResponse = await fetch('http://localhost:3001/api/scanner/status');
    const status = await statusResponse.json();
    
    console.log('üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∫–∞–Ω–µ—Ä–∞:');
    console.log('  - openrouterApiKey:', !!status.status.openrouterApiKey);
    console.log('  - leadCriteria:', !!status.status.leadCriteria);
    
    // –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Ö
    if (!status.status.openrouterApiKey || !status.status.leadCriteria) {
      console.log('‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Ö...');
      
      const updateResponse = await fetch('http://localhost:3001/api/scanner/update-ai-settings', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          openrouterApiKey: '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',
          leadCriteria: `–ù–∞–π—Ç–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º:
1. –õ—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—â—É—Ç —É—Å–ª—É–≥–∏ –∏–ª–∏ —Ç–æ–≤–∞—Ä—ã
2. –°–æ–æ–±—â–µ–Ω–∏—è —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ —Ç–∏–ø–∞ "–≥–¥–µ –Ω–∞–π—Ç–∏", "–∫—Ç–æ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å", "–Ω—É–∂–µ–Ω —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç"
3. –ó–∞–ø—Ä–æ—Å—ã –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É—Å–ª—É–≥ –∏–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤
4. –°–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Ä–µ—à–∏—Ç—å
5. –õ—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–ø–æ–º–∏–Ω–∞—é—Ç –±—é–¥–∂–µ—Ç –∏–ª–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø–ª–∞—Ç–∏—Ç—å
6. –ó–∞–ø—Ä–æ—Å—ã –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏–ª–∏ –ø–æ–º–æ—â—å
7. –°–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π (—Ç–µ–ª–µ—Ñ–æ–Ω, email, @username)

–ò—Å–∫–ª—é—á–∏—Ç—å:
- –°–ø–∞–º –∏ —Ä–µ–∫–ª–∞–º–∞
- –û–±—â–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã –±–µ–∑ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞
- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞`
        })
      });
      
      if (updateResponse.ok) {
        const result = await updateResponse.json();
        console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã:', result);
      } else {
        const error = await updateResponse.text();
        console.log('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      }
    } else {
      console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const finalStatusResponse = await fetch('http://localhost:3001/api/scanner/status');
    const finalStatus = await finalStatusResponse.json();
    
    console.log('\nüìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å:');
    console.log('  - openrouterApiKey:', !!finalStatus.status.openrouterApiKey);
    console.log('  - leadCriteria:', !!finalStatus.status.leadCriteria);
    
    if (finalStatus.status.openrouterApiKey && finalStatus.status.leadCriteria) {
      console.log('üéâ –ü—Ä–æ–±–ª–µ–º–∞ —Å globalSettings –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!');
    } else {
      console.log('‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞, —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ globalSettings:', error);
  }
}

fixGlobalSettings();