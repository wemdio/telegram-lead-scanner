// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ª–∏–¥–æ–≤
const axios = require('axios');

async function testSimpleTracking() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ª–∏–¥–æ–≤...\n');
  
  try {
    // 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–æ–≤—ã—Ö –ª–∏–¥–æ–≤
    console.log('üì§ –í—ã–∑—ã–≤–∞–µ–º send-new-leads...');
    const response = await axios.post('http://localhost:3001/api/cron/send-new-leads');
    
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log('  - –£—Å–ø–µ—Ö:', response.data.success);
    console.log('  - –°–æ–æ–±—â–µ–Ω–∏–µ:', response.data.message);
    console.log('  - –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ª–∏–¥–æ–≤:', response.data.sentCount);
    
    if (response.data.sentCount > 0) {
      console.log('\n‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç! –õ–∏–¥—ã –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∏ –ø–æ–º–µ—á–µ–Ω—ã –∫–∞–∫ sent=true');
    } else {
      console.log('\nüì≠ –ù–æ–≤—ã—Ö –ª–∏–¥–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ (–≤—Å–µ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã)');
      console.log('   –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
    }
    
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∏–º –¥–µ—Ç–∞–ª–∏ –≤ –ª–æ–≥–∞—Ö backend —Å–µ—Ä–≤–µ—Ä–∞...');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    if (error.response) {
      console.error('üìÑ –î–µ—Ç–∞–ª–∏:', error.response.data);
    }
  }
}

testSimpleTracking();