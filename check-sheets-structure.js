// –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π fetch API (Node.js 18+)

async function checkSheetsStructure() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ª–∏—Å—Ç–æ–≤ –≤ Google Sheets...\n');

    try {
        // 1. –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets
        console.log('1Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets...');
        const settingsResponse = await fetch('http://localhost:3001/api/settings/google-sheets');
        
        if (!settingsResponse.ok) {
            console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets');
            return;
        }

        const settings = await settingsResponse.json();
        console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã:', {
            hasApiKey: !!settings.apiKey,
            hasSpreadsheetId: !!settings.spreadsheetId,
            spreadsheetId: settings.spreadsheetId
        });

        if (!settings.apiKey || !settings.spreadsheetId) {
            console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets');
            return;
        }

        // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ª–∏—Å—Ç–∞ "–°–æ–æ–±—â–µ–Ω–∏—è"
        console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ª–∏—Å—Ç–∞ "–°–æ–æ–±—â–µ–Ω–∏—è"...');
        const messagesResponse = await fetch(`http://localhost:3001/api/sheets/data?spreadsheetId=${settings.spreadsheetId}&range=–°–æ–æ–±—â–µ–Ω–∏—è!1:3`);
        
        if (messagesResponse.ok) {
            const messagesData = await messagesResponse.json();
            console.log('‚úÖ –õ–∏—Å—Ç "–°–æ–æ–±—â–µ–Ω–∏—è" –Ω–∞–π–¥–µ–Ω');
            console.log('üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ (–ø–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏):');
            if (messagesData.values && messagesData.values.length > 0) {
                messagesData.values.forEach((row, index) => {
                    console.log(`   –°—Ç—Ä–æ–∫–∞ ${index + 1}:`, row);
                });
            } else {
                console.log('   –î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
            }
        } else {
            console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ª–∏—Å—Ç–∞ "–°–æ–æ–±—â–µ–Ω–∏—è"');
        }

        // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ª–∏—Å—Ç–∞ "–õ–∏–¥—ã"
        console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ª–∏—Å—Ç–∞ "–õ–∏–¥—ã"...');
        const leadsResponse = await fetch(`http://localhost:3001/api/sheets/data?spreadsheetId=${settings.spreadsheetId}&range=–õ–∏–¥—ã!1:10`);
        
        if (leadsResponse.ok) {
            const leadsData = await leadsResponse.json();
            console.log('‚úÖ –õ–∏—Å—Ç "–õ–∏–¥—ã" –Ω–∞–π–¥–µ–Ω');
            console.log('üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ (–ø–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫):');
            if (leadsData.values && leadsData.values.length > 0) {
                leadsData.values.forEach((row, index) => {
                    console.log(`   –°—Ç—Ä–æ–∫–∞ ${index + 1}:`, row);
                });
            } else {
                console.log('   ‚ö†Ô∏è –õ–∏—Å—Ç –ø—É—Å—Ç–æ–π –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
            }
        } else {
            console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ª–∏—Å—Ç–∞ "–õ–∏–¥—ã"');
            console.log('   –í–æ–∑–º–æ–∂–Ω–æ, –ª–∏—Å—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –∏–º–µ–µ—Ç –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ');
        }

        // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏—Å—Ç "–°–≤—è–∑–∞–ª–∏—Å—å" (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
        console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏—Å—Ç "–°–≤—è–∑–∞–ª–∏—Å—å"...');
        const contactedResponse = await fetch(`http://localhost:3001/api/sheets/data?spreadsheetId=${settings.spreadsheetId}&range=–°–≤—è–∑–∞–ª–∏—Å—å!1:5`);
        
        if (contactedResponse.ok) {
            const contactedData = await contactedResponse.json();
            console.log('‚úÖ –õ–∏—Å—Ç "–°–≤—è–∑–∞–ª–∏—Å—å" –Ω–∞–π–¥–µ–Ω');
            console.log('üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ (–ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫):');
            if (contactedData.values && contactedData.values.length > 0) {
                contactedData.values.forEach((row, index) => {
                    console.log(`   –°—Ç—Ä–æ–∫–∞ ${index + 1}:`, row);
                });
            } else {
                console.log('   –õ–∏—Å—Ç –ø—É—Å—Ç–æ–π –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
            }
        } else {
            console.log('‚ö†Ô∏è –õ–∏—Å—Ç "–°–≤—è–∑–∞–ª–∏—Å—å" –Ω–µ –Ω–∞–π–¥–µ–Ω (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å–æ–∑–¥–∞–Ω)');
        }

        // 5. –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –ª–∏—Å—Ç–∞—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ
        console.log('\n5Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ª–∏—Å—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ...');
        try {
            const sheetsInfoResponse = await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${settings.spreadsheetId}?key=${settings.apiKey}`);
            
            if (sheetsInfoResponse.ok) {
                const sheetsInfo = await sheetsInfoResponse.json();
                console.log('üìã –í—Å–µ –ª–∏—Å—Ç—ã –≤ —Ç–∞–±–ª–∏—Ü–µ:');
                if (sheetsInfo.sheets) {
                    sheetsInfo.sheets.forEach((sheet, index) => {
                        console.log(`   ${index + 1}. "${sheet.properties.title}" (ID: ${sheet.properties.sheetId})`);
                    });
                }
            } else {
                console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏—Å—Ç–∞—Ö —á–µ—Ä–µ–∑ Google Sheets API');
            }
        } catch (error) {
            console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–∏—Å—Ç–∞—Ö:', error.message);
        }

        console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ª–∏—Å—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ª–∏—Å—Ç–æ–≤:', error.message);
    }
}

checkSheetsStructure();