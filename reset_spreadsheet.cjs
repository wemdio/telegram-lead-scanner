// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±—Ä–æ—Å–∞ Google Sheets —Ç–∞–±–ª–∏—Ü—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–º–µ—â–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö

const fetch = require('node-fetch');

async function resetSpreadsheet() {
  try {
    console.log('üîÑ –°–±—Ä–æ—Å Google Sheets —Ç–∞–±–ª–∏—Ü—ã...');
    
    const response = await fetch('http://localhost:3001/api/sheets/reset', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({})
    });
    
    if (response.ok) {
      const result = await response.json();
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω–∞!');
      console.log('üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏:', result.headers.join(', '));
      console.log('üìä ID —Ç–∞–±–ª–∏—Ü—ã:', result.spreadsheetId);
    } else {
      const error = await response.text();
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Ç–∞–±–ª–∏—Ü—ã:', error);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  resetSpreadsheet();
}

module.exports = resetSpreadsheet;