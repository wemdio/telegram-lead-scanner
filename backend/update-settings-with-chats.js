const fs = require('fs');
const path = require('path');

async function updateSettingsWithChats() {
  try {
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ —á–∞—Ç–∞–º–∏...\n');

    const settingsPath = path.join(__dirname, 'persistent-settings.json');
    
    // –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    let settings = {};
    if (fs.existsSync(settingsPath)) {
      settings = JSON.parse(fs.readFileSync(settingsPath, 'utf8'));
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —á–∞—Ç—ã –∏–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const testChats = [
      "7881639949",
      "-1001442937604", 
      "-1001273124836",
      "-1001131923496",
      "-1001611947303"
    ];

    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const updatedSettings = {
      ...settings,
      selectedChats: testChats,
      telegramConfig: {
        apiId: settings.telegramConfig?.apiId || "12345",
        apiHash: settings.telegramConfig?.apiHash || "test-hash",
        sessionString: settings.telegramConfig?.sessionString || "test-session"
      },
      scanInterval: settings.scanInterval || 1
    };

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    fs.writeFileSync(settingsPath, JSON.stringify(updatedSettings, null, 2));
    
    console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã:');
    console.log(`  - selectedChats: ${updatedSettings.selectedChats.length} —á–∞—Ç–æ–≤`);
    console.log(`  - telegramConfig: ${!!updatedSettings.telegramConfig.apiId}`);
    console.log(`  - scanInterval: ${updatedSettings.scanInterval}`);
    console.log(`  - openrouterApiKey: ${!!updatedSettings.openrouterApiKey}`);
    console.log(`  - leadCriteria: ${!!updatedSettings.leadCriteria}`);
    
    console.log('\nüìã –í—ã–±—Ä–∞–Ω–Ω—ã–µ —á–∞—Ç—ã:');
    updatedSettings.selectedChats.forEach((chat, index) => {
      console.log(`  ${index + 1}. ${chat}`);
    });

    // –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º —Ä—É—á–Ω–æ–π —Å–∫–∞–Ω
    console.log('\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä—É—á–Ω–æ–π —Å–∫–∞–Ω...');
    
    const scanPayload = {
      selectedChats: updatedSettings.selectedChats,
      telegramConfig: updatedSettings.telegramConfig,
      sheetsConfig: updatedSettings.sheetsConfig,
      spreadsheetId: updatedSettings.spreadsheetId,
      scanInterval: updatedSettings.scanInterval,
      leadAnalysisSettings: {
        openrouterApiKey: updatedSettings.openrouterApiKey,
        leadCriteria: updatedSettings.leadCriteria
      }
    };

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä—É—á–Ω–æ–π —Å–∫–∞–Ω...');
    const scanResponse = await fetch('http://localhost:3001/api/scanner/scan', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(scanPayload)
    });

    if (!scanResponse.ok) {
      const errorText = await scanResponse.text();
      console.log(`‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫–∞–Ω–∞: ${errorText}`);
      return;
    }

    const scanResult = await scanResponse.json();
    console.log('‚úÖ –†—É—á–Ω–æ–π —Å–∫–∞–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∫–∞–Ω–∞:`, scanResult);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–∫–∞–Ω–µ—Ä–∞ –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∞
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–∫–∞–Ω–µ—Ä–∞ –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∞...');
    const statusResponse = await fetch('http://localhost:3001/api/scanner/status');
    const status = await statusResponse.json();
    
    console.log(`  - –†–∞–±–æ—Ç–∞–µ—Ç: ${status.isRunning}`);
    console.log(`  - –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–∫–∞–Ω: ${status.lastScan}`);
    console.log(`  - –°–ª–µ–¥—É—é—â–∏–π —Å–∫–∞–Ω: ${status.nextScan}`);
    console.log(`  - –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${status.totalMessages}`);

    console.log('\n‚è∞ –ê–≤—Ç–æ–∞–Ω–∞–ª–∏–∑ –¥–æ–ª–∂–µ–Ω —Å—Ä–∞–±–æ—Ç–∞—Ç—å —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∞');
    console.log('üîç –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ª–æ–≥–∞–º–∏ backend —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error.message);
  }
}

updateSettingsWithChats();