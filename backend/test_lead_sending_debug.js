const axios = require('axios');

async function debugLeadSending() {
  try {
    console.log('üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–∏–¥–æ–≤...\n');

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
    console.log('1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram...');
    const telegramResponse = await axios.get('http://localhost:3001/api/settings/telegram');
    console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram:', telegramResponse.data);
    
    const { botToken, channelId } = telegramResponse.data;
    if (!botToken || !channelId) {
      console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram!');
      return;
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–¥—ã –≤ —Å–∏—Å—Ç–µ–º–µ
    console.log('\n2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–¥—ã –≤ —Å–∏—Å—Ç–µ–º–µ...');
    const leadsResponse = await axios.get('http://localhost:3001/api/leads');
    const leads = leadsResponse.data.leads;
    console.log(`–í—Å–µ–≥–æ –ª–∏–¥–æ–≤: ${leads.length}`);
    
    if (leads.length === 0) {
      console.log('‚ùå –ù–µ—Ç –ª–∏–¥–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ!');
      return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∫–∞–∂–¥–æ–≥–æ –ª–∏–¥–∞
    leads.forEach((lead, index) => {
      console.log(`  –õ–∏–¥ ${index + 1}:`, {
        id: lead.id,
        name: lead.name,
        sent: lead.sent,
        message: lead.message ? lead.message.substring(0, 50) + '...' : '–Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è'
      });
    });

    // 3. –§–∏–ª—å—Ç—Ä—É–µ–º –Ω–µ–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ª–∏–¥—ã
    const unsentLeads = leads.filter(lead => lead.sent !== true);
    console.log(`\n3. –ù–µ–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ª–∏–¥–æ–≤: ${unsentLeads.length}`);
    
    if (unsentLeads.length === 0) {
      console.log('‚ùå –í—Å–µ –ª–∏–¥—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!');
      return;
    }

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –æ–¥–Ω–æ–≥–æ –ª–∏–¥–∞ –Ω–∞–ø—Ä—è–º—É—é
    console.log('\n4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –æ–¥–Ω–æ–≥–æ –ª–∏–¥–∞ –Ω–∞–ø—Ä—è–º—É—é...');
    const testLead = unsentLeads[0];
    console.log('–¢–µ—Å—Ç–æ–≤—ã–π –ª–∏–¥:', {
      id: testLead.id,
      name: testLead.name,
      sent: testLead.sent
    });

    try {
      const telegramSendResponse = await axios.post('http://localhost:3001/api/telegram-bot/send-lead-notification', {
        botToken: botToken,
        channelId: channelId,
        lead: testLead
      });
      
      console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', telegramSendResponse.data);
    } catch (telegramError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', telegramError.message);
      if (telegramError.response) {
        console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', telegramError.response.data);
      }
    }

    // 5. –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–∏–¥–æ–≤
    console.log('\n5. –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–∏–¥–æ–≤...');
    const cronResponse = await axios.post('http://localhost:3001/api/cron/send-new-leads');
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç cron –∑–∞–¥–∞—á–∏:', cronResponse.data);

    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ª–∏–¥–æ–≤ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    console.log('\n6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ª–∏–¥–æ–≤ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏...');
    const finalLeadsResponse = await axios.get('http://localhost:3001/api/leads');
    const finalLeads = finalLeadsResponse.data.leads;
    
    const sentLeads = finalLeads.filter(lead => lead.sent === true);
    const stillUnsentLeads = finalLeads.filter(lead => lead.sent !== true);
    
    console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ª–∏–¥–æ–≤: ${sentLeads.length}`);
    console.log(`–ù–µ–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ª–∏–¥–æ–≤: ${stillUnsentLeads.length}`);

    console.log('\n‚úÖ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–ª–∞–¥–∫–µ:', error.message);
    if (error.response) {
      console.error('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.response.data);
    }
  }
}

debugLeadSending();