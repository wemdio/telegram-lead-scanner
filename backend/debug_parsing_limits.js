const axios = require('axios');

async function debugParsingLimits() {
  console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π...\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–∫–∞–Ω–µ—Ä–∞ (–Ω–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫)
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∫–∞–Ω–µ—Ä–∞:');
    const statusResponse = await axios.get('http://localhost:3001/api/scanner/status');
    const status = statusResponse.data;
    console.log(`   –°—Ç–∞—Ç—É—Å: ${status.isScanning ? '–°–∫–∞–Ω–∏—Ä—É–µ—Ç' : '–ù–µ –∞–∫—Ç–∏–≤–µ–Ω'}`);
    console.log(`   –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: ${status.lastScanTime || '–ù–∏–∫–æ–≥–¥–∞'}`);
    console.log(`   –ü—Ä–æ–≥—Ä–µ—Å—Å: ${status.progress || 0}%`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
    const telegramSettingsResponse = await axios.get('http://localhost:3001/api/settings/telegram');
    const telegramSettings = telegramSettingsResponse.data;
    console.log(`   Telegram –Ω–∞—Å—Ç—Ä–æ–µ–Ω: ${telegramSettings.botToken ? '–î–∞' : '–ù–µ—Ç'}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —á–∞—Ç—ã
    try {
      const chatsResponse = await axios.get('http://localhost:3001/api/telegram/chats');
      const chats = chatsResponse.data.chats || [];
      console.log(`   –î–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∞—Ç–æ–≤: ${chats.length}`);
    } catch (chatsError) {
      console.log(`   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤: ${chatsError.message}`);
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã –≤ –∫–æ–¥–µ
    console.log('\n2Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –ª–∏–º–∏—Ç–æ–≤ –≤ –∫–æ–¥–µ:');
    console.log('   - –õ–∏–º–∏—Ç getMessages: 1000 —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –∑–∞–ø—Ä–æ—Å');
    console.log('   - –õ–∏–º–∏—Ç AI –∞–Ω–∞–ª–∏–∑–∞: 1000 —Å–æ–æ–±—â–µ–Ω–∏–π –º–∞–∫—Å–∏–º—É–º');
    console.log('   - –†–∞–∑–º–µ—Ä —á–∞–Ω–∫–∞ –¥–ª—è AI: 100 —Å–æ–æ–±—â–µ–Ω–∏–π');
    console.log('   - –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —á–∞–Ω–∫–∞–º–∏: 500ms');

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
    console.log('\n3Ô∏è‚É£ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–π:');
    const scannerStatusResponse = await axios.get('http://localhost:3001/api/scanner/status');
    const scannerStatus = scannerStatusResponse.data;
    console.log(`   –°—Ç–∞—Ç—É—Å: ${scannerStatus.isScanning ? '–°–∫–∞–Ω–∏—Ä—É–µ—Ç' : '–ù–µ –∞–∫—Ç–∏–≤–µ–Ω'}`);
    console.log(`   –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: ${scannerStatus.lastScanTime || '–ù–∏–∫–æ–≥–¥–∞'}`);
    console.log(`   –ü—Ä–æ–≥—Ä–µ—Å—Å: ${scannerStatus.progress || 0}%`);
    
    if (scannerStatus.scanResults) {
      console.log(`   –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:`);
      console.log(`     - –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${scannerStatus.scanResults.totalMessages || 0}`);
      console.log(`     - –ù–∞–π–¥–µ–Ω–æ –ª–∏–¥–æ–≤: ${scannerStatus.scanResults.totalLeads || 0}`);
      console.log(`     - –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${scannerStatus.scanResults.processingTime || 0}—Å`);
    }

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ:');
    const leadsResponse = await axios.get('http://localhost:3001/api/leads');
    const leads = leadsResponse.data;
    
    if (Array.isArray(leads)) {
      console.log(`   –í—Å–µ–≥–æ –ª–∏–¥–æ–≤ –≤ –±–∞–∑–µ: ${leads.length}`);
      
      // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è
      const leadsByHour = {};
      leads.forEach(lead => {
        if (lead.timestamp) {
          const hour = new Date(lead.timestamp).toISOString().slice(0, 13);
          leadsByHour[hour] = (leadsByHour[hour] || 0) + 1;
        }
      });
      
      console.log(`   –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ª–∏–¥–æ–≤ –ø–æ —á–∞—Å–∞–º (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10):`);
      const sortedHours = Object.keys(leadsByHour).sort().slice(-10);
      sortedHours.forEach(hour => {
        console.log(`     ${hour}: ${leadsByHour[hour]} –ª–∏–¥–æ–≤`);
      });
    } else {
      console.log(`   –î–∞–Ω–Ω—ã–µ –ª–∏–¥–æ–≤: ${typeof leads} (–Ω–µ –º–∞—Å—Å–∏–≤)`);
    }

    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä—É—á–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —á–∞—Ç–∞
    console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç —Ä—É—á–Ω–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:');
    if (settings.selectedChats && settings.selectedChats.length > 0) {
      const testChat = settings.selectedChats[0];
      console.log(`   –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–∞—Ç: ${testChat.title} (ID: ${testChat.id})`);
      
      try {
        const scanResponse = await axios.post('http://localhost:3001/api/scanner/scan', {
          chatIds: [testChat.id],
          isManualScan: true
        });
        
        console.log(`   –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:`);
        console.log(`     - –°—Ç–∞—Ç—É—Å: ${scanResponse.data.success ? '–£—Å–ø–µ—à–Ω–æ' : '–û—à–∏–±–∫–∞'}`);
        console.log(`     - –°–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—É—á–µ–Ω–æ: ${scanResponse.data.totalMessages || 0}`);
        console.log(`     - –õ–∏–¥–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: ${scanResponse.data.totalLeads || 0}`);
        
        if (scanResponse.data.chatResults) {
          scanResponse.data.chatResults.forEach(result => {
            console.log(`     - –ß–∞—Ç ${result.chatTitle}: ${result.messageCount} —Å–æ–æ–±—â–µ–Ω–∏–π, ${result.leadCount} –ª–∏–¥–æ–≤`);
          });
        }
      } catch (scanError) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: ${scanError.message}`);
      }
    } else {
      console.log(`   ‚ö†Ô∏è –ù–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è`);
    }

    // 6. –ê–Ω–∞–ª–∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–∏—á–∏–Ω –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
    console.log('\n6Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–∏—á–∏–Ω –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è ~1500 —Å–æ–æ–±—â–µ–Ω–∏–π/—á–∞—Å:');
    console.log('   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.log('   a) –õ–∏–º–∏—Ç Telegram API: 1000 —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –∑–∞–ø—Ä–æ—Å getMessages()');
    console.log('   b) –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏: offset_date –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –≤—ã–±–æ—Ä–∫—É');
    console.log('   c) –õ–∏–º–∏—Ç AI –∞–Ω–∞–ª–∏–∑–∞: –º–∞–∫—Å–∏–º—É–º 1000 —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ —Ä–∞–∑');
    console.log('   d) Rate limiting: –∑–∞–¥–µ—Ä–∂–∫–∏ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏');
    console.log('   e) –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —á–∞—Ç–æ–≤: –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —á–∞—Ç–∞—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å –º–∞–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π');
    
    // –†–∞—Å—á–µ—Ç —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–∞–∫—Å–∏–º—É–º–∞
    const chatsCount = settings.selectedChats?.length || 0;
    const maxMessagesPerChat = 1000;
    const theoreticalMax = chatsCount * maxMessagesPerChat;
    console.log(`\n   –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –º–∞–∫—Å–∏–º—É–º:`);
    console.log(`   - –ß–∞—Ç–æ–≤: ${chatsCount}`);
    console.log(`   - –ú–∞–∫—Å–∏–º—É–º —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ —á–∞—Ç: ${maxMessagesPerChat}`);
    console.log(`   - –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –º–∞–∫—Å–∏–º—É–º –∑–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: ${theoreticalMax}`);
    console.log(`   - –ù–∞–±–ª—é–¥–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ~1500 —Å–æ–æ–±—â–µ–Ω–∏–π/—á–∞—Å`);
    
    if (theoreticalMax > 1500) {
      console.log(`   ‚ö†Ô∏è –ï—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ! –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ.`);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error.message);
    if (error.response) {
      console.error('   –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }
  }
}

debugParsingLimits();