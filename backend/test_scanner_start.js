const axios = require('axios');

async function testScannerStart() {
    try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∞—Ç–æ–≤...');
        
        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
        const chatsResponse = await axios.get('http://localhost:3001/api/telegram/chats');
        const chats = chatsResponse.data.chats;
        
        console.log(`üìã –ù–∞–π–¥–µ–Ω–æ —á–∞—Ç–æ–≤: ${chats.length}`);
        
        if (chats.length === 0) {
            console.log('‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∞—Ç–æ–≤ –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è');
            console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é Telegram');
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —á–∞—Ç–æ–≤
        console.log('\nüìã –ü–µ—Ä–≤—ã–µ 5 —á–∞—Ç–æ–≤:');
        chats.slice(0, 5).forEach((chat, index) => {
            console.log(`${index + 1}. ${chat.title} (ID: ${chat.id}, Type: ${chat.type})`);
        });
        
        // –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç –∏–ª–∏ –∫–∞–Ω–∞–ª –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        const testChat = chats.find(chat => chat.type === 'supergroup' || chat.type === 'channel');
        
        if (!testChat) {
            console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —á–∞—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–Ω—É–∂–Ω—ã –≥—Ä—É–ø–ø—ã –∏–ª–∏ –∫–∞–Ω–∞–ª—ã)');
            return;
        }
        
        console.log(`\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Ç–∞: ${testChat.title}`);
        
        // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫–∞–Ω–µ—Ä
        const scannerData = {
            scanInterval: 1,
            selectedChats: [testChat.id]
        };
        
        console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞–Ω–µ—Ä...');
        const startResponse = await axios.post('http://localhost:3001/api/scanner/start', scannerData);
        
        console.log('‚úÖ –°–∫–∞–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
        console.log('üìä –û—Ç–≤–µ—Ç:', startResponse.data);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(async () => {
            try {
                const statusResponse = await axios.get('http://localhost:3001/api/scanner/status');
                console.log('\nüìà –°—Ç–∞—Ç—É—Å —Å–∫–∞–Ω–µ—Ä–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã:');
                console.log(JSON.stringify(statusResponse.data, null, 2));
            } catch (error) {
                console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞:', error.message);
            }
        }, 3000);
        
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–∫–∞–Ω–µ—Ä–∞:');
        if (error.response) {
            console.log('üìÑ –°—Ç–∞—Ç—É—Å:', error.response.status);
            console.log('üìÑ –î–∞–Ω–Ω—ã–µ:', error.response.data);
        } else {
            console.log('üìÑ –°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
        }
    }
}

testScannerStart();