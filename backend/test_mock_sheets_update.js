const axios = require('axios');

async function testMockSheetsUpdate() {
  try {
    console.log('üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º mock —Ä–µ–∂–∏–º –¥–ª—è Google Sheets...');
    
    // –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–∏–º mock –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const mockSettings = {
      googleServiceAccountEmail: 'mock@test.com',
      googlePrivateKey: 'MOCK_PRIVATE_KEY_FOR_TESTING',
      googleSpreadsheetId: 'mock-spreadsheet-id'
    };
    
    console.log('üìù –û—Ç–ø—Ä–∞–≤–ª—è–µ–º mock –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...');
    const settingsResponse = await axios.post('http://localhost:3001/api/settings/google-sheets', mockSettings);
    console.log('‚úÖ Mock –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', settingsResponse.data);
    
    // –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ª–∏–¥–∞
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ª–∏–¥–∞...');
    const updateResponse = await axios.post('http://localhost:3001/api/sheets/update-lead-sent', {
      spreadsheetId: 'mock-spreadsheet-id',
      leadIndex: 2,
      sent: true
    });
    
    console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', updateResponse.data);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.response?.data || error.message);
  }
}

testMockSheetsUpdate();