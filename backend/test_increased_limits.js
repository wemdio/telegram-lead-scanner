const axios = require('axios');

async function testIncreasedLimits() {
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤ –ø–∞—Ä—Å–∏–Ω–≥–∞...\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Telegram
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Telegram:');
    const telegramStatus = await axios.get('http://localhost:3001/api/telegram/status');
    console.log(`   –ü–æ–¥–∫–ª—é—á–µ–Ω: ${telegramStatus.data.connected ? '–î–∞' : '–ù–µ—Ç'}`);
    console.log(`   –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: ${telegramStatus.data.authenticated ? '–î–∞' : '–ù–µ—Ç'}`);
    
    if (!telegramStatus.data.connected || !telegramStatus.data.authenticated) {
      console.log('‚ùå Telegram –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∏–ª–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –¢–µ—Å—Ç –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.');
      return;
    }

    // 2. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
    console.log('\n2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤:');
    const chatsResponse = await axios.get('http://localhost:3001/api/telegram/chats');
    const chats = chatsResponse.data.chats || [];
    console.log(`   –î–æ—Å—Ç—É–ø–Ω–æ —á–∞—Ç–æ–≤: ${chats.length}`);
    
    if (chats.length === 0) {
      console.log('‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∞—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.');
      return;
    }

    // –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 —á–∞—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const testChats = chats.slice(0, 3);
    console.log('   –¢–µ—Å—Ç–æ–≤—ã–µ —á–∞—Ç—ã:');
    testChats.forEach((chat, index) => {
      console.log(`     ${index + 1}. ${chat.title} (ID: ${chat.id})`);
    });

    // 3. –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    console.log('\n3Ô∏è‚É£ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ –ª–∏–º–∏—Ç–∞–º–∏:');
    console.log('   üìä –û–∂–∏–¥–∞–µ–º—ã–µ —É–ª—É—á—à–µ–Ω–∏—è:');
    console.log('     ‚Ä¢ MAX_MESSAGES: 1000 ‚Üí 5000 (+400%)');
    console.log('     ‚Ä¢ Scanner limit: 1000 ‚Üí 5000 (+400%)');
    console.log('     ‚Ä¢ Telegram dialogs: 100 ‚Üí 500 (+400%)');
    console.log('     ‚Ä¢ Messages API: 100 ‚Üí 1000 (+900%)');

    const scanStartTime = Date.now();
    
    try {
      const scanResponse = await axios.post('http://localhost:3001/api/scanner/scan', {
        chatIds: testChats.map(chat => chat.id),
        isManualScan: true
      });
      
      const scanDuration = Date.now() - scanStartTime;
      
      console.log('\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:');
      console.log(`   –°—Ç–∞—Ç—É—Å: ${scanResponse.data.success ? '–£—Å–ø–µ—à–Ω–æ' : '–û—à–∏–±–∫–∞'}`);
      console.log(`   –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${(scanDuration / 1000).toFixed(2)} —Å–µ–∫—É–Ω–¥`);
      console.log(`   –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${scanResponse.data.totalMessages || 0}`);
      console.log(`   –ù–∞–π–¥–µ–Ω–æ –ª–∏–¥–æ–≤: ${scanResponse.data.totalLeads || 0}`);
      
      if (scanResponse.data.chatResults) {
        console.log('\n   üìã –î–µ—Ç–∞–ª–∏ –ø–æ —á–∞—Ç–∞–º:');
        scanResponse.data.chatResults.forEach((result, index) => {
          console.log(`     ${index + 1}. ${result.chatTitle}:`);
          console.log(`        ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π: ${result.messageCount}`);
          console.log(`        ‚Ä¢ –õ–∏–¥–æ–≤: ${result.leadCount}`);
          console.log(`        ‚Ä¢ –í—Ä–µ–º—è: ${result.processingTime || 'N/A'}`);
        });
      }

      // 4. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      console.log('\n4Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:');
      const totalMessages = scanResponse.data.totalMessages || 0;
      const messagesPerSecond = totalMessages / (scanDuration / 1000);
      
      console.log(`   üìà –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:`);
      console.log(`     ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ–∫—É–Ω–¥—É: ${messagesPerSecond.toFixed(2)}`);
      console.log(`     ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π –≤ –º–∏–Ω—É—Ç—É: ${(messagesPerSecond * 60).toFixed(0)}`);
      console.log(`     ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Å: ${(messagesPerSecond * 3600).toFixed(0)}`);
      
      // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –ª–∏–º–∏—Ç–∞–º–∏
      const oldHourlyLimit = 1500; // –ù–∞–±–ª—é–¥–∞–µ–º—ã–π –ª–∏–º–∏—Ç
      const newHourlyEstimate = messagesPerSecond * 3600;
      const improvement = ((newHourlyEstimate - oldHourlyLimit) / oldHourlyLimit * 100);
      
      console.log(`\n   üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –ª–∏–º–∏—Ç–∞–º–∏:`);
      console.log(`     ‚Ä¢ –°—Ç–∞—Ä—ã–π –ª–∏–º–∏—Ç: ~${oldHourlyLimit} —Å–æ–æ–±—â–µ–Ω–∏–π/—á–∞—Å`);
      console.log(`     ‚Ä¢ –ù–æ–≤—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª: ~${newHourlyEstimate.toFixed(0)} —Å–æ–æ–±—â–µ–Ω–∏–π/—á–∞—Å`);
      console.log(`     ‚Ä¢ –£–ª—É—á—à–µ–Ω–∏–µ: ${improvement > 0 ? '+' : ''}${improvement.toFixed(1)}%`);

    } catch (scanError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: ${scanError.message}`);
      if (scanError.response) {
        console.log(`   –°—Ç–∞—Ç—É—Å: ${scanError.response.status}`);
        console.log(`   –î–µ—Ç–∞–ª–∏: ${JSON.stringify(scanError.response.data, null, 2)}`);
      }
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ª–∏–¥–æ–≤
    console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ª–∏–¥–æ–≤:');
    try {
      const leadsResponse = await axios.get('http://localhost:3001/api/leads');
      const leads = leadsResponse.data.leads || [];
      console.log(`   –í—Å–µ–≥–æ –ª–∏–¥–æ–≤ –≤ –±–∞–∑–µ: ${leads.length}`);
      
      if (leads.length > 0) {
        const recentLeads = leads.filter(lead => {
          const leadTime = new Date(lead.timestamp);
          const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000);
          return leadTime >= fiveMinutesAgo;
        });
        console.log(`   –ù–æ–≤—ã—Ö –ª–∏–¥–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –º–∏–Ω—É—Ç: ${recentLeads.length}`);
      }
    } catch (leadsError) {
      console.log(`   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ª–∏–¥–æ–≤: ${leadsError.message}`);
    }

    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    console.log('   1. –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞');
    console.log('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ –ª–∏–º–∏—Ç–∞–º–∏');
    console.log('   3. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –∞–≤—Ç–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    if (error.response) {
      console.error('   –°—Ç–∞—Ç—É—Å:', error.response.status);
      console.error('   –î–∞–Ω–Ω—ã–µ:', error.response.data);
    }
  }
}

testIncreasedLimits();