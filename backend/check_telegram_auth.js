const axios = require('axios');

async function checkTelegramAuth() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Telegram...\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram:');
    const settingsResponse = await axios.get('http://localhost:3001/api/settings/telegram');
    const settings = settingsResponse.data;
    
    console.log(`   Bot Token: ${settings.botToken ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}`);
    console.log(`   Channel ID: ${settings.channelId ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}`);
    
    if (!settings.botToken || !settings.channelId) {
      console.log('‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –Ω–µ –ø–æ–ª–Ω—ã–µ!\n');
      return;
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:');
    try {
      const statusResponse = await axios.get('http://localhost:3001/api/telegram/status');
      const status = statusResponse.data;
      
      console.log(`   –ü–æ–¥–∫–ª—é—á–µ–Ω: ${status.connected ? '–î–∞' : '–ù–ï–¢'}`);
      console.log(`   –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: ${status.success ? '–î–∞' : '–ù–ï–¢'}`);
      
      if (status.user) {
        console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${status.user.firstName} ${status.user.lastName || ''}`);
        console.log(`   Username: @${status.user.username || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`   Phone: ${status.user.phone || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
      }
      
      if (!status.connected || !status.success) {
        console.log('‚ùå Telegram –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω!');
        console.log('   –°–æ–æ–±—â–µ–Ω–∏–µ:', status.message);
        console.log('   –û—à–∏–±–∫–∞:', status.error);
      }
    } catch (statusError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', statusError.response?.data?.message || statusError.message);
    }

    // 3. –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç–∞–º:');
    try {
      const chatsResponse = await axios.get('http://localhost:3001/api/telegram/chats');
      const chats = chatsResponse.data.chats;
      
      console.log(`   –ù–∞–π–¥–µ–Ω–æ —á–∞—Ç–æ–≤: ${chats.length}`);
      
      if (chats.length > 0) {
        console.log('   –ü–µ—Ä–≤—ã–µ 5 —á–∞—Ç–æ–≤:');
        chats.slice(0, 5).forEach((chat, index) => {
          console.log(`     ${index + 1}. ${chat.title} (${chat.type}) - ID: ${chat.id}`);
        });
      } else {
        console.log('   ‚ùå –ß–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
      }
    } catch (chatsError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —á–∞—Ç–æ–≤:', chatsError.response?.data?.message || chatsError.message);
      
      if (chatsError.response?.status === 401) {
        console.log('   üîë –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Telegram!');
      }
    }

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∫–ª–∏–µ–Ω—Ç–∞
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞:');
    try {
      const initResponse = await axios.post('http://localhost:3001/api/telegram/initialize', {
        apiId: settings.apiId || '12345678',
        apiHash: settings.apiHash || 'test_hash',
        sessionString: settings.sessionString || ''
      });
      
      console.log(`   –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: ${initResponse.data.success ? '–£—Å–ø–µ—à–Ω–æ' : '–ù–µ—É–¥–∞—á–Ω–æ'}`);
      console.log(`   –°–æ–æ–±—â–µ–Ω–∏–µ: ${initResponse.data.message}`);
      
      if (initResponse.data.sessionString) {
        console.log(`   Session String: ${initResponse.data.sessionString.substring(0, 50)}...`);
      }
    } catch (initError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', initError.response?.data?.message || initError.message);
    }

    console.log('\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –≤–∞–ª–∏–¥–Ω—ã–µ API ID –∏ API Hash –æ—Ç Telegram');
    console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –≤–∞–ª–∏–¥–Ω–∞—è Session String');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Telegram –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
    console.log('4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error.message);
  }
}

checkTelegramAuth().catch(console.error);