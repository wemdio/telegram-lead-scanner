const axios = require('axios');

async function testLoadLeads() {
  try {
    console.log('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–∏–¥—ã –∏–∑ Google Sheets –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É...\n');

    // 1. –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets
    console.log('1. –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets...');
    const settingsResponse = await axios.get('http://localhost:3001/api/settings/google-sheets');
    console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets:', settingsResponse.data);
    
    if (!settingsResponse.data.success) {
      throw new Error('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }

    const { serviceAccountEmail, privateKey, spreadsheetId } = settingsResponse.data;

    // 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Google Sheets –∫–ª–∏–µ–Ω—Ç
    console.log('2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Google Sheets –∫–ª–∏–µ–Ω—Ç...');
    const initResponse = await axios.post('http://localhost:3001/api/sheets/auto-initialize', {
      googleServiceAccountEmail: serviceAccountEmail,
      googlePrivateKey: privateKey,
      googleSpreadsheetId: spreadsheetId
    });
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', initResponse.data);

    // 3. –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–∏–¥—ã –∏–∑ Google Sheets
    console.log('3. –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–∏–¥—ã –∏–∑ Google Sheets...');
    const leadsResponse = await axios.get(`http://localhost:3001/api/sheets/leads/${spreadsheetId}`);
    console.log('–õ–∏–¥—ã –∏–∑ Google Sheets:', leadsResponse.data);

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–¥—ã –≤ —Å–∏—Å—Ç–µ–º–µ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    console.log('4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–¥—ã –≤ —Å–∏—Å—Ç–µ–º–µ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏...');
    const systemLeadsResponse = await axios.get('http://localhost:3001/api/leads/status');
    console.log('–õ–∏–¥—ã –≤ —Å–∏—Å—Ç–µ–º–µ:', systemLeadsResponse.data);

    // 5. –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–∏–¥–æ–≤
    console.log('5. –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–∏–¥–æ–≤...');
    const cronResponse = await axios.post('http://localhost:3001/api/cron/send-new-leads');
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏:', cronResponse.data);

    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–¥—ã –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    console.log('6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–¥—ã –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è...');
    const finalLeadsResponse = await axios.get('http://localhost:3001/api/leads/status');
    console.log('–§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ª–∏–¥–æ–≤:', finalLeadsResponse.data);

    // 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ Google Sheets
    console.log('7. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ Google Sheets...');
    const finalSheetsResponse = await axios.get(`http://localhost:3001/api/sheets/leads/${spreadsheetId}`);
    console.log('–§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ Google Sheets:', finalSheetsResponse.data);

    console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ:', error.message);
    if (error.response) {
      console.error('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.response.data);
    }
  }
}

testLoadLeads();