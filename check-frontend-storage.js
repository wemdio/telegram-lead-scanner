// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ localStorage –≤ –±—Ä–∞—É–∑–µ—Ä–µ
const puppeteer = require('puppeteer');

async function checkFrontendStorage() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage –≤ –±—Ä–∞—É–∑–µ—Ä–µ...');
  
  let browser;
  try {
    browser = await puppeteer.launch({ 
      headless: false,
      defaultViewport: null 
    });
    
    const page = await browser.newPage();
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    console.log('üì± –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
    await page.goto('http://localhost:3000', { waitUntil: 'networkidle0' });
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
    const localStorageData = await page.evaluate(() => {
      const storage = {};
      for (let i = 0; i < localStorage.length; i++) {
        const key = localStorage.key(i);
        storage[key] = localStorage.getItem(key);
      }
      return storage;
    });
    
    console.log('üíæ –î–∞–Ω–Ω—ã–µ –≤ localStorage:');
    Object.keys(localStorageData).forEach(key => {
      if (key.toLowerCase().includes('google') || key.toLowerCase().includes('sheet')) {
        console.log(`üîë ${key}:`, localStorageData[key]);
      }
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∫–ª—é—á–∏ –¥–ª—è Google Sheets
    const googleKeys = [
      'googleServiceAccountEmail',
      'googlePrivateKey', 
      'googleSpreadsheetId',
      'google-sheets-settings',
      'sheets-credentials'
    ];
    
    console.log('\nüîç –ü–æ–∏—Å–∫ Google Sheets –Ω–∞—Å—Ç—Ä–æ–µ–∫:');
    googleKeys.forEach(key => {
      const value = localStorageData[key];
      if (value) {
        console.log(`‚úÖ ${key}: ${value.length > 50 ? value.substring(0, 50) + '...' : value}`);
      } else {
        console.log(`‚ùå ${key}: –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      }
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–ª—é—á–∏ —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ 'google' –∏–ª–∏ 'sheet'
    console.log('\nüîç –í—Å–µ –∫–ª—é—á–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å Google/Sheets:');
    const relatedKeys = Object.keys(localStorageData).filter(key => 
      key.toLowerCase().includes('google') || 
      key.toLowerCase().includes('sheet') ||
      key.toLowerCase().includes('credential')
    );
    
    if (relatedKeys.length === 0) {
      console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–π —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å Google Sheets');
    } else {
      relatedKeys.forEach(key => {
        console.log(`üîë ${key}: ${localStorageData[key]}`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ localStorage:', error.message);
  } finally {
    if (browser) {
      await browser.close();
    }
  }
}

checkFrontendStorage();