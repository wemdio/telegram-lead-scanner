// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –ø–æ–∏—Å–∫–∞ –ª–∏–¥–æ–≤
async function fixLeadCriteria() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –ª–∏–¥–æ–≤...\n');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –ª–∏–¥–æ–≤
    const newCriteria = `–ù–∞–π—Ç–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º:
1. –õ—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—â—É—Ç —É—Å–ª—É–≥–∏ –∏–ª–∏ —Ç–æ–≤–∞—Ä—ã
2. –°–æ–æ–±—â–µ–Ω–∏—è —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ —Ç–∏–ø–∞ "–≥–¥–µ –Ω–∞–π—Ç–∏", "–∫—Ç–æ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å", "–Ω—É–∂–µ–Ω —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç"
3. –ó–∞–ø—Ä–æ—Å—ã –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É—Å–ª—É–≥ –∏–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤
4. –°–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Ä–µ—à–∏—Ç—å
5. –õ—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–ø–æ–º–∏–Ω–∞—é—Ç –±—é–¥–∂–µ—Ç –∏–ª–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø–ª–∞—Ç–∏—Ç—å
6. –ó–∞–ø—Ä–æ—Å—ã –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏–ª–∏ –ø–æ–º–æ—â—å
7. –°–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π (—Ç–µ–ª–µ—Ñ–æ–Ω, email, @username)

–ò—Å–∫–ª—é—á–∏—Ç—å:
- –°–ø–∞–º –∏ —Ä–µ–∫–ª–∞–º–∞
- –û–±—â–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã –±–µ–∑ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞
- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞`;

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ —á–µ—Ä–µ–∑ API —Å–∫–∞–Ω–µ—Ä–∞
    const response = await fetch('http://localhost:3001/api/scanner/update-ai-settings', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        openrouterApiKey: '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', // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–ª—é—á
        leadCriteria: newCriteria
      })
    });

    if (response.ok) {
      const result = await response.json();
      console.log('‚úÖ –ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –ª–∏–¥–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
      console.log('üìù –ù–æ–≤—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏:');
      console.log(newCriteria);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...');
      const statusResponse = await fetch('http://localhost:3001/api/scanner/status');
      if (statusResponse.ok) {
        const status = await statusResponse.json();
        console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –≤ —Å–∏—Å—Ç–µ–º–µ:', status.status.leadCriteria);
      }
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤:', response.status);
      const error = await response.text();
      console.log('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤:', error.message);
  }
}

fixLeadCriteria();