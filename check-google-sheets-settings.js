// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets —á–µ—Ä–µ–∑ API
async function checkGoogleSheetsSettings() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets...\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets –Ω–∞ backend
    console.log('üìã 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ backend:');
    const settingsResponse = await fetch('http://localhost:3001/api/settings/google-sheets');
    
    if (settingsResponse.ok) {
      const settings = await settingsResponse.json();
      console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã:', {
        hasSpreadsheetId: !!settings.spreadsheetId,
        hasApiKey: !!settings.apiKey,
        hasServiceAccountEmail: !!settings.googleServiceAccountEmail,
        hasPrivateKey: !!settings.googlePrivateKey
      });
      
      if (settings.spreadsheetId) {
        console.log('üìä Spreadsheet ID:', settings.spreadsheetId);
      }
      
      if (settings.googleServiceAccountEmail) {
        console.log('üìß Service Account Email:', settings.googleServiceAccountEmail);
      }
    } else {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', settingsResponse.status);
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Google Sheets –∫–ª–∏–µ–Ω—Ç–∞
    console.log('\nüìã 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Google Sheets –∫–ª–∏–µ–Ω—Ç–∞:');
    const statusResponse = await fetch('http://localhost:3001/api/sheets/status');
    
    if (statusResponse.ok) {
      const status = await statusResponse.json();
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–∞:', status);
    } else {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–∞:', statusResponse.status);
    }
    
    // 3. –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ –ª–∏—Å—Ç–æ–≤
    console.log('\nüìã 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –ª–∏—Å—Ç–∞–º:');
    const headersResponse = await fetch('http://localhost:3001/api/sheets/headers');
    
    if (headersResponse.ok) {
      const headers = await headersResponse.json();
      console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã:', headers);
    } else {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏:', headersResponse.status);
      const errorText = await headersResponse.text();
      console.log('–û—à–∏–±–∫–∞:', errorText);
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    console.log('\nüìã 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
    const envVars = [
      'GOOGLE_PRIVATE_KEY',
      'GOOGLE_CLIENT_EMAIL', 
      'GOOGLE_PROJECT_ID',
      'GOOGLE_SPREADSHEET_ID',
      'GOOGLE_SHEETS_CREDENTIALS'
    ];
    
    envVars.forEach(varName => {
      const value = process.env[varName];
      if (value) {
        console.log(`‚úÖ ${varName}: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ (${value.length} —Å–∏–º–≤–æ–ª–æ–≤)`);
      } else {
        console.log(`‚ùå ${varName}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞`);
      }
    });
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    console.log('\nüìã 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
    const fs = require('fs');
    const path = require('path');
    
    const configFiles = ['.env', '.env.local', '.env.production'];
    configFiles.forEach(file => {
      const filePath = path.join(__dirname, file);
      if (fs.existsSync(filePath)) {
        console.log(`‚úÖ ${file}: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        try {
          const content = fs.readFileSync(filePath, 'utf8');
          const hasGoogleSettings = content.includes('GOOGLE') || content.includes('SHEETS');
          console.log(`   –°–æ–¥–µ—Ä–∂–∏—Ç Google –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: ${hasGoogleSettings ? '‚úÖ' : '‚ùå'}`);
        } catch (error) {
          console.log(`   –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: ${error.message}`);
        }
      } else {
        console.log(`‚ùå ${file}: –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
      }
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkGoogleSheetsSettings();