const fs = require('fs');
const path = require('path');

// –°–æ–∑–¥–∞–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ AI –∫–ª—é—á–∞
const htmlContent = `<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ AI –∫–ª—é—á–∞</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        
        .container {
            background: white;
            padding: 30px;
            border-radius: 15px;
            margin-bottom: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }
        
        h1 {
            color: #333;
            text-align: center;
            margin-bottom: 30px;
            font-size: 2.5em;
        }
        
        h2 {
            color: #555;
            border-bottom: 2px solid #667eea;
            padding-bottom: 10px;
        }
        
        .status {
            padding: 15px;
            border-radius: 8px;
            margin: 15px 0;
            font-weight: bold;
        }
        
        .success { 
            background-color: #d4edda; 
            color: #155724; 
            border: 1px solid #c3e6cb;
        }
        
        .error { 
            background-color: #f8d7da; 
            color: #721c24; 
            border: 1px solid #f5c6cb;
        }
        
        .info { 
            background-color: #d1ecf1; 
            color: #0c5460; 
            border: 1px solid #bee5eb;
        }
        
        .warning { 
            background-color: #fff3cd; 
            color: #856404; 
            border: 1px solid #ffeaa7;
        }
        
        input, textarea {
            width: 100%;
            padding: 12px;
            margin: 8px 0;
            border: 2px solid #ddd;
            border-radius: 8px;
            box-sizing: border-box;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        
        input:focus, textarea:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 10px rgba(102, 126, 234, 0.3);
        }
        
        button {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 12px 25px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            margin: 8px;
            font-size: 16px;
            font-weight: bold;
            transition: transform 0.2s, box-shadow 0.2s;
        }
        
        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }
        
        .danger {
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
        }
        
        .test-btn {
            background: linear-gradient(135deg, #4ecdc4 0%, #44a08d 100%);
        }
        
        pre {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            overflow-x: auto;
            border: 1px solid #e9ecef;
        }
        
        .step {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            margin: 15px 0;
            border-left: 5px solid #667eea;
        }
        
        .step h3 {
            margin-top: 0;
            color: #667eea;
        }
        
        .api-key-input {
            font-family: 'Courier New', monospace;
            background-color: #f8f9fa;
        }
        
        .criteria-input {
            min-height: 120px;
            resize: vertical;
        }
    </style>
</head>
<body>
    <h1>üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ OpenRouter API –∫–ª—é—á–∞</h1>
    
    <div class="container">
        <h2>üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é API –∫–ª—é—á–∞</h2>
        
        <div class="step">
            <h3>–®–∞–≥ 1: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ OpenRouter</h3>
            <p>1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç <a href="https://openrouter.ai" target="_blank">https://openrouter.ai</a></p>
            <p>2. –ù–∞–∂–º–∏—Ç–µ "Sign Up" –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å</p>
            <p>3. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email –∞–¥—Ä–µ—Å</p>
        </div>
        
        <div class="step">
            <h3>–®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ API –∫–ª—é—á–∞</h3>
            <p>1. –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç OpenRouter</p>
            <p>2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "API Keys" –∏–ª–∏ "Keys"</p>
            <p>3. –ù–∞–∂–º–∏—Ç–µ "Create Key" –∏–ª–∏ "Generate API Key"</p>
            <p>4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–ª—é—á (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "sk-or-v1-")</p>
        </div>
        
        <div class="step">
            <h3>–®–∞–≥ 3: –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</h3>
            <p>1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "Credits" –∏–ª–∏ "Billing"</p>
            <p>2. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –Ω–∞ $5-10 –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</p>
            <p>3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –±–∞–ª–∞–Ω—Å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ</p>
        </div>
    </div>
    
    <div class="container">
        <h2>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API –∫–ª—é—á–∞</h2>
        
        <label><strong>OpenRouter API Key:</strong></label>
        <input type="password" id="apiKey" class="api-key-input" placeholder="sk-or-v1-–≤–∞—à-–∫–ª—é—á-–∑–¥–µ—Å—å">
        
        <label><strong>–ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –ª–∏–¥–æ–≤:</strong></label>
        <textarea id="criteria" class="criteria-input" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä:
- –ò—â—É –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤
- –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ø–æ React, Node.js, Python
- –§—Ä–∏–ª–∞–Ω—Å–µ—Ä—ã –≥–æ—Ç–æ–≤—ã–µ –∫ –Ω–æ–≤—ã–º –ø—Ä–æ–µ–∫—Ç–∞–º
- –õ—é–¥–∏ –ø—Ä–µ–¥–ª–∞–≥–∞—é—â–∏–µ —É—Å–ª—É–≥–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"></textarea>
        
        <div style="text-align: center; margin: 20px 0;">
            <button onclick="saveSettings()">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</button>
            <button onclick="testSettings()" class="test-btn">üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å AI</button>
            <button onclick="clearSettings()" class="danger">üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å</button>
        </div>
    </div>
    
    <div class="container">
        <h2>üìä –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
        <button onclick="checkCurrentSettings()">üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</button>
        <div id="currentSettings"></div>
    </div>
    
    <div class="container">
        <h2>üß™ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</h2>
        <div id="testResults"></div>
    </div>

    <script>
        function showMessage(elementId, message, type = 'info') {
            const element = document.getElementById(elementId);
            element.innerHTML = \`<div class="status \${type}">\${message}</div>\`;
        }

        function saveSettings() {
            const apiKey = document.getElementById('apiKey').value.trim();
            const criteria = document.getElementById('criteria').value.trim();
            
            if (!apiKey) {
                showMessage('testResults', '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á', 'error');
                return;
            }
            
            if (!criteria) {
                showMessage('testResults', '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞', 'error');
                return;
            }
            
            if (!apiKey.startsWith('sk-or-v1-')) {
                showMessage('testResults', '‚ö†Ô∏è API –∫–ª—é—á –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å "sk-or-v1-"', 'warning');
            }
            
            try {
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ —á–∞—Å—Ç—è–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                localStorage.setItem('geminiApiKey', apiKey);
                localStorage.setItem('openrouterApiKey', apiKey);
                localStorage.setItem('leadCriteria', criteria);
                
                showMessage('testResults', '‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ localStorage!', 'success');
                checkCurrentSettings();
                
            } catch (error) {
                showMessage('testResults', \`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: \${error.message}\`, 'error');
            }
        }

        function checkCurrentSettings() {
            const settings = {
                'geminiApiKey': localStorage.getItem('geminiApiKey'),
                'openrouterApiKey': localStorage.getItem('openrouterApiKey'),
                'leadCriteria': localStorage.getItem('leadCriteria')
            };
            
            let html = '<h3>–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</h3>';
            
            Object.entries(settings).forEach(([key, value]) => {
                const displayValue = value ? 
                    (value.length > 50 ? value.substring(0, 20) + '...' + value.substring(value.length - 10) : value) : 
                    '‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û';
                html += \`<p><strong>\${key}:</strong> \${displayValue}</p>\`;
            });
            
            document.getElementById('currentSettings').innerHTML = html;
        }

        async function testSettings() {
            showMessage('testResults', 'üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ AI...', 'info');
            
            const apiKey = localStorage.getItem('openrouterApiKey') || localStorage.getItem('geminiApiKey');
            const criteria = localStorage.getItem('leadCriteria');
            
            if (!apiKey || !criteria) {
                showMessage('testResults', '‚ùå –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', 'error');
                return;
            }
            
            const testData = {
                openrouterApiKey: apiKey,
                criteria: criteria,
                messages: [
                    {
                        id: 'test_msg_1',
                        text: '–ü—Ä–∏–≤–µ—Ç! –Ø fullstack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –≤ React, Node.js –∏ Python. –ò—â—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è —Ñ—Ä–∏–ª–∞–Ω—Å–∞. –ú–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º @developer123',
                        author: 'TestDeveloper',
                        timestamp: new Date().toISOString()
                    },
                    {
                        id: 'test_msg_2',
                        text: '–ö—Ç–æ-–Ω–∏–±—É–¥—å –∑–Ω–∞–µ—Ç —Ö–æ—Ä–æ—à–µ–≥–æ –¥–∏–∑–∞–π–Ω–µ—Ä–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è? –ù—É–∂–µ–Ω —Å—Ä–æ—á–Ω–æ!',
                        author: 'ClientUser',
                        timestamp: new Date().toISOString()
                    },
                    {
                        id: 'test_msg_3',
                        text: '–Ø frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ Vue.js –∏ TypeScript. –û—Ç–∫—Ä—ã—Ç –¥–ª—è –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π. –ö–æ–Ω—Ç–∞–∫—Ç: @frontend_pro',
                        author: 'VueDevUser',
                        timestamp: new Date().toISOString()
                    }
                ],
                spreadsheetId: 'test_spreadsheet_id',
                googleServiceAccountEmail: 'telegram-scanner@leadscanner-470700.iam.gserviceaccount.com',
                googlePrivateKey: 'test_private_key'
            };
            
            try {
                const response = await fetch('http://localhost:3001/api/leads/analyze', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(testData),
                    timeout: 30000
                });
                
                const result = await response.json();
                
                let html = \`<h3>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h3>\`;
                html += \`<p><strong>–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:</strong> \${response.status}</p>\`;
                
                if (response.ok) {
                    html += \`<p><strong>–ù–∞–π–¥–µ–Ω–æ –ª–∏–¥–æ–≤:</strong> \${result.leads ? result.leads.length : 0}</p>\`;
                    
                    if (result.leads && result.leads.length > 0) {
                        html += '<h4>‚úÖ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ª–∏–¥—ã:</h4>';
                        result.leads.forEach((lead, index) => {
                            html += \`<div class="status success">
                                <strong>–õ–∏–¥ \${index + 1}:</strong><br>
                                <strong>ID:</strong> \${lead.messageId || lead.id}<br>
                                <strong>–ê–≤—Ç–æ—Ä:</strong> \${lead.author}<br>
                                <strong>–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å:</strong> \${lead.confidence}%<br>
                                <strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> \${lead.reason}
                            </div>\`;
                        });
                        
                        html += '<div class="status success">üéâ <strong>–û—Ç–ª–∏—á–Ω–æ! AI —É—Å–ø–µ—à–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç –ª–∏–¥—ã. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</strong></div>';
                    } else {
                        html += '<div class="status warning">‚ö†Ô∏è –õ–∏–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.</div>';
                    }
                    
                    showMessage('testResults', html, 'success');
                } else {
                    html += \`<div class="status error">‚ùå –û—à–∏–±–∫–∞ API: \${response.status}<br><pre>\${JSON.stringify(result, null, 2)}</pre></div>\`;
                    showMessage('testResults', html, 'error');
                }
                
            } catch (error) {
                let errorMsg = \`‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: \${error.message}\`;
                
                if (error.message.includes('Failed to fetch')) {
                    errorMsg += '<br><br>üîß <strong>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</strong><br>';
                    errorMsg += '‚Ä¢ –ë—ç–∫–µ–Ω–¥ –Ω–µ –∑–∞–ø—É—â–µ–Ω (–∑–∞–ø—É—Å—Ç–∏—Ç–µ: npm run dev –≤ –ø–∞–ø–∫–µ backend)<br>';
                    errorMsg += '‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π –ø–æ—Ä—Ç (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –±—ç–∫–µ–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 3001)<br>';
                    errorMsg += '‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å CORS';
                }
                
                showMessage('testResults', errorMsg, 'error');
            }
        }

        function clearSettings() {
            if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏?')) {
                try {
                    localStorage.removeItem('geminiApiKey');
                    localStorage.removeItem('openrouterApiKey');
                    localStorage.removeItem('leadCriteria');
                    
                    document.getElementById('apiKey').value = '';
                    document.getElementById('criteria').value = '';
                    
                    showMessage('testResults', 'üóëÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—á–∏—â–µ–Ω—ã', 'info');
                    checkCurrentSettings();
                } catch (error) {
                    showMessage('testResults', \`‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: \${error.message}\`, 'error');
                }
            }
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        window.onload = function() {
            checkCurrentSettings();
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–æ–ª—è
            const savedApiKey = localStorage.getItem('openrouterApiKey') || localStorage.getItem('geminiApiKey');
            const savedCriteria = localStorage.getItem('leadCriteria');
            
            if (savedApiKey) {
                document.getElementById('apiKey').value = savedApiKey;
            }
            
            if (savedCriteria) {
                document.getElementById('criteria').value = savedCriteria;
            }
        };
    </script>
</body>
</html>`;

// –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML —Ñ–∞–π–ª
const filePath = path.join(__dirname, 'setup-real-ai-key.html');
fs.writeFileSync(filePath, htmlContent, 'utf8');

console.log('‚úÖ HTML —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω:', filePath);
console.log('üåê –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ AI –∫–ª—é—á–∞');
console.log('üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é OpenRouter API –∫–ª—é—á–∞ –≤–∫–ª—é—á–µ–Ω—ã –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å');

// –¢–∞–∫–∂–µ –≤—ã–≤–æ–¥–∏–º –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å
console.log('\nüìã –ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:');
console.log('1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ https://openrouter.ai');
console.log('2. –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á –≤ —Ä–∞–∑–¥–µ–ª–µ "API Keys"');
console.log('3. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –Ω–∞ $5-10');
console.log('4. –û—Ç–∫—Ä–æ–π—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π HTML —Ñ–∞–π–ª –∏ –≤–≤–µ–¥–∏—Ç–µ –∫–ª—é—á');
console.log('5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–∞–±–æ—Ç—É AI –∞–Ω–∞–ª–∏–∑–∞');